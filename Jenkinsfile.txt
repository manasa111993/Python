pipeline {
    agent any

    tools {
        // Name must match the one you configured in Manage Jenkins â†’ Global Tool Configuration
        allure 'allure'
    }

    triggers {
        // Build periodically every night at 2 AM
        cron('H 2 * * *')
        // Poll GitHub every 5 minutes
        pollSCM('H/5 * * * *')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/manasa111993/Python.git'
            }
        }

        stage('Setup Python Env') {
            steps {
                bat '''
        python -m venv venv
        venv\\Scripts\\activate && pip install --upgrade pip
        if exist requirements.txt (
            venv\\Scripts\\activate && pip install -r requirements.txt
        )
        venv\\Scripts\\activate && pip install pytest allure-pytest
        '''
            }
        }

        stage('Run Pytest') {
            steps {
                // Generate BOTH Allure and JUnit reports
                bat 'venv\\Scripts\\activate && pytest --alluredir=allure-results --junitxml=results.xml'
                bat 'dir' // just to confirm results.xml is present
            }
        }

        stage('Publish JUnit Report') {
            steps {
                junit 'results.xml'
            }
        }

        stage('Publish Allure Report') {
            steps {
                allure includeProperties: false, jdk: '', results: [[path: 'allure-results']]
            }
        }
    }

    post {
        always {
            echo "Cleaning up..."
            deleteDir() // optional: cleans workspace
        }
    }
}
