pipeline {
    agent any

    tools {
        // Name must match the one you configured in Manage Jenkins â†’ Global Tool Configuration
        allure 'allure'
    }

    triggers {
        // Build periodically every night at 2 AM
        cron('H 2 * * *')
        // Poll GitHub every 5 minutes
        pollSCM('H/5 * * * *')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/manasa111993/Python.git'
            }
        }

        stage('Setup Python Env') {
            steps {
                bat '''
        python -m venv venv
        venv\\Scripts\\activate && pip install --upgrade pip
        if exist requirements.txt (
            venv\\Scripts\\activate && pip install -r requirements.txt
        )
        venv\\Scripts\\activate && pip install pytest allure-pytest
        '''
            }
        }

        stage('Run Tests') {
            steps {
                // Even if tests fail, continue pipeline
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    bat '''
                    venv\\Scripts\\activate && pytest ^
                        --alluredir=allure-results ^
                        --junitxml=results.xml
                    '''
                }
            }
        }

        post {
            always {
                junit 'results.xml'
                allure includeProperties: false, jdk: '', results: [[path: 'allure-results']]
                echo "Cleaning up..."
                deleteDir()
                }
            }
        }
    }
